package com.oceantechrus.max.logicapp;

import android.content.Intent;
import android.content.SharedPreferences;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.telephony.SmsManager;
import android.util.DisplayMetrics;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.WindowManager;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.Toast;

import com.zgkxzx.modbus4And.requset.ModbusParam;
import com.zgkxzx.modbus4And.requset.ModbusReq;
import com.zgkxzx.modbus4And.requset.OnRequestBack;

import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

public class NewMainActivity extends AppCompatActivity implements LoginDialog.LoginDialogListener{

    private String[] login = {
            "developer", "14142",
            "svirin", "9267905278",
            "sit", "9028538383",
            "user", "1234",
            "user", "23456",
            "user", "911"
    };

    // названия аналоговых входов
    private String[] ui_main_names = {
            "Резерв",                                       // 0
            "Улица",                                        // 1
            "Приток",                                       // 2
            "Резерв",                                       // 3
            "Резерв",                                       // 4
            "Вытяжка",                                      // 5
            "t обратной воды",                              // 6
            "t теплообмен.на вытяжке",                      // 7
            "t теплообмен.на притоке",                      // 8
            "Скорость 1",                                   // 9
            "Скорость 2",                                   // 10
            "Контроль питания",                             // 11
            "Датчик пожара",                                // 12
            "Кнопка Пуск",                                  // 13
            "Кнопка Стоп",                                  // 14
            "t ТЭН",                                        // 15
            "t ТЭН оттайки",                                // 16
            "t горячих газов 2",                            // 17
            "t холодных газов 2",                           // 18
            "Помещение",                                    // 19
            "Датчик перегрева ТЭН",                         // 20
            "t воздуха после испар.",                       // 21
            "Дифманометр",                                  // 22
            "Сигнал \"Оттайка\"",                           // 23
            "Влажность наружн.возд.",                       // 24
            "Влажность приточн.возд.",                      // 25
            "Влажность выт.воздуха",                        // 26
            "Влажность воздуха в помещ.",                   // 27
            "t приточного воздуха 2",                       // 28
            "Контроль сост.прит.рез.вент-ра",               // 29
            "Контроль сост.выт.рез.вент-ра",                // 30
            "Контроль состояния охладителя",                // 31
            "Контроль сост.выт.вент-ра В2",                 // 32
            "Контроль сост.выт.вент-ра В3",                 // 33
            "t воды подачи",                                // 34
            "Контроль сост.компр. 1",                       // 35
            "Контроль сост.компр. 2",                       // 36
            "Гигрометр",                                    // 37
            "t воды",                                       // 38
            "t контура ГВС",                                // 39
            "t контура вентиляции",                         // 40
            "t контура отопления",                          // 41
            "t обратной воды отопл.",                       // 42
            "t обратной воды сети",                         // 43
            "t воздуха после увлажн.",                      // 44
            "Контроль сост.компр.",                         // 45
            "t воздуха в камере смеш.",                     // 46
            "t компрессора",                                // 47
            "t воздуха после рекуп.",                       // 48
            "Температура 1",                                // 49
            "Влажность 1",                                  // 50
            "Температура 2",                                // 51
            "Влажность 2",                                  // 52
            "Температура 3",                                // 53
            "Влажность 3",                                  // 54
            "Температура 4",                                // 55
            "Влажность 4",                                  // 56
            "t контура ТП1",                                // 57
            "t контура ТП2",                                // 58
            "t контура ТП3",                                // 59
            "t контура Отопления 1",                        // 60
            "t контура Отопления 2",                        // 61
            "Температура 1",                                // 62
            "Температура 2",                                // 63
            "Температура 3",                                // 64
            "Фильтр 1",                                     // 65
            "Фильтр 2",                                     // 66
            "t отопления 1 и 2 этаж",                       // 67
            "Режим Ручной/Автомат",                         // 68
            "t обратной воды 1",                            // 69
            "t обратной воды 2",                            // 70
            "t обратной воды 3",                            // 71
            "t входящей воды",                              // 72
            "t выходящей воды",                             // 73
            "Датчик высокого давления",                     // 74
            "Датчик низкого давления",                      // 75
            "Кнопка включения завесы 1",                    // 76
            "Кнопка включения завесы 2",                    // 77
            "Кнопка включения завесы 3",                    // 78
            "Кнопка включения завесы 4",                    // 79
            "Контроль сост.вент-ра В4",                     // 80
            "Контроль сост.вент-ра В5",                     // 81
            "Контроль сост.вент-ра В6",                     // 82
            "Контроль сост.вент-ра В7",                     // 83
            "Контроль сост.вент-ра В8",                     // 84
            "Контроль сост.вент-ра В9",                     // 85
            "t возд.после калориф.1",                       // 86
            "t обратной воды 1",                            // 87
            "t обратной воды 2",                            // 88
            "Пуск приточной вентиляции",                    // 89
            "Пуск вытяжной вентиляции",                     // 90
            "t воздуха в помещении 1",                      // 91
            "t воздуха в помещении 2",                      // 92
            "t воздуха в помещении 3",                      // 93
            "t кипения фреона",                             // 94
            "Режим Ручной/Автомат П1",                      // 95
            "Режим Ручной/Автомат В1",                      // 96
            "Режим Ручной/Автомат П2",                      // 97
            "Режим Ручной/Автомат В2",                      // 98
            "Режим Ручной/Автомат П3",                      // 99
            "Режим Ручной/Автомат В3",                      // 100
            "Контроль сост.вент-ра В3",                     // 101
            "Контроль сост.вент-ра В10",                    // 102
            "Режим Зима/Лето",                              // 103
            "t контура обх.дорожек",                        // 104
            "t контура подогрева воды",                     // 105
            "Датчик протечки",                              // 106
            "Подмес вытяжного воздуха",                     // 107
            "Обрыв ремня прит.вент-ра",                     // 108
            "Обрыв ремня выт.вент-ра",                      // 109
            String.valueOf((char) 916) + "P1",              // 110
            String.valueOf((char) 916) + "P2",              // 111
            String.valueOf((char) 916) + "P3",              // 112
            String.valueOf((char) 916) + "P4",              // 113
            "Обороты вентилятора",                          // 114
            "Датчик перепада давления",                     // 115
            "Датчик давления",                              // 116
            "Концевик клапана 1 (закр)",                    // 117
            "Концевик клапана 1 (откр)",                    // 118
            "Концевик клапана 2 (закр)",                    // 119
            "Концевик клапана 2 (откр)",                    // 120
            "Концевик клапана 3 (закр)",                    // 121
            "Концевик клапана 3 (откр)",                    // 122
            "Концевик клапана 4 (закр)",                    // 123
            "Концевик клапана 4 (откр)",                    // 124
            "Датчик тока двигателя",                        // 125
    };


    // названия аналоговых входов
    private String[] ui_names = {
            "Резерв",                                       // 0
            "t наружного воздуха",                          // 1
            "t приточного воздуха",                         // 2
            "t нагнетания",                                 // 3
            "t всасывания",                                 // 4
            "t вытяжного воздуха",                          // 5
            "t обратной воды",                              // 6
            "t теплообмен.на вытяжке",                      // 7
            "t теплообмен.на притоке",                      // 8
            "Скорость 1",                                   // 9
            "Скорость 2",                                   // 10
            "Контроль питания",                             // 11
            "Датчик пожара",                                // 12
            "Кнопка Пуск",                                  // 13
            "Кнопка Стоп",                                  // 14
            "t ТЭН",                                        // 15
            "t ТЭН оттайки",                                // 16
            "t горячих газов 2",                            // 17
            "t холодных газов 2",                           // 18
            "t воздуха в помещении",                        // 19
            "Датчик перегрева ТЭН",                         // 20
            "t воздуха после испар.",                       // 21
            "Дифманометр",                                  // 22
            "Сигнал \"Оттайка\"",                           // 23
            "Влажность наружн.возд.",                       // 24
            "Влажность приточн.возд.",                      // 25
            "Влажность выт.воздуха",                        // 26
            "Влажность воздуха в помещ.",                   // 27
            "t приточного воздуха 2",                       // 28
            "Контроль сост.прит.рез.вент-ра",               // 29
            "Контроль сост.выт.рез.вент-ра",                // 30
            "Контроль состояния охладителя",                // 31
            "Контроль сост.выт.вент-ра В2",                 // 32
            "Контроль сост.выт.вент-ра В3",                 // 33
            "t воды подачи",                                // 34
            "Контроль сост.компр. 1",                       // 35
            "Контроль сост.компр. 2",                       // 36
            "Гигрометр",                                    // 37
            "t воды",                                       // 38
            "t контура ГВС",                                // 39
            "t контура вентиляции",                         // 40
            "t контура отопления",                          // 41
            "t обратной воды отопл.",                       // 42
            "t обратной воды сети",                         // 43
            "t воздуха после увлажн.",                      // 44
            "Контроль сост.компр.",                         // 45
            "t воздуха в камере смеш.",                     // 46
            "t компрессора",                                // 47
            "t воздуха после рекуп.",                       // 48
            "Температура 1",                                // 49
            "Влажность 1",                                  // 50
            "Температура 2",                                // 51
            "Влажность 2",                                  // 52
            "Температура 3",                                // 53
            "Влажность 3",                                  // 54
            "Температура 4",                                // 55
            "Влажность 4",                                  // 56
            "t контура ТП1",                                // 57
            "t контура ТП2",                                // 58
            "t контура ТП3",                                // 59
            "t контура Отопления 1",                        // 60
            "t контура Отопления 2",                        // 61
            "Температура 1",                                // 62
            "Температура 2",                                // 63
            "Температура 3",                                // 64
            "Фильтр 1",                                     // 65
            "Фильтр 2",                                     // 66
            "t отопления 1 и 2 этаж",                       // 67
            "Режим Ручной/Автомат",                         // 68
            "t обратной воды 1",                            // 69
            "t обратной воды 2",                            // 70
            "t обратной воды 3",                            // 71
            "t входящей воды",                              // 72
            "t выходящей воды",                             // 73
            "Датчик высокого давления",                     // 74
            "Датчик низкого давления",                      // 75
            "Кнопка включения завесы 1",                    // 76
            "Кнопка включения завесы 2",                    // 77
            "Кнопка включения завесы 3",                    // 78
            "Кнопка включения завесы 4",                    // 79
            "Контроль сост.вент-ра В4",                     // 80
            "Контроль сост.вент-ра В5",                     // 81
            "Контроль сост.вент-ра В6",                     // 82
            "Контроль сост.вент-ра В7",                     // 83
            "Контроль сост.вент-ра В8",                     // 84
            "Контроль сост.вент-ра В9",                     // 85
            "t возд.после калориф.1",                       // 86
            "t обратной воды 1",                            // 87
            "t обратной воды 2",                            // 88
            "Пуск приточной вентиляции",                    // 89
            "Пуск вытяжной вентиляции",                     // 90
            "t воздуха в помещении 1",                      // 91
            "t воздуха в помещении 2",                      // 92
            "t воздуха в помещении 3",                      // 93
            "t кипения фреона",                             // 94
            "Режим Ручной/Автомат П1",                      // 95
            "Режим Ручной/Автомат В1",                      // 96
            "Режим Ручной/Автомат П2",                      // 97
            "Режим Ручной/Автомат В2",                      // 98
            "Режим Ручной/Автомат П3",                      // 99
            "Режим Ручной/Автомат В3",                      // 100
            "Контроль сост.вент-ра В3",                     // 101
            "Контроль сост.вент-ра В10",                    // 102
            "Режим Зима/Лето",                              // 103
            "t контура обх.дорожек",                        // 104
            "t контура подогрева воды",                     // 105
            "Датчик протечки",                              // 106
            "Подмес вытяжного воздуха",                     // 107
            "Обрыв ремня прит.вент-ра",                     // 108
            "Обрыв ремня выт.вент-ра",                      // 109
            String.valueOf((char) 916) + "P1",              // 110
            String.valueOf((char) 916) + "P2",              // 111
            String.valueOf((char) 916) + "P3",              // 112
            String.valueOf((char) 916) + "P4",              // 113
            "Обороты вентилятора",                          // 114
            "Датчик перепада давления",                     // 115
            "Датчик давления",                              // 116
            "Концевик клапана 1 (закр)",                    // 117
            "Концевик клапана 1 (откр)",                    // 118
            "Концевик клапана 2 (закр)",                    // 119
            "Концевик клапана 2 (откр)",                    // 120
            "Концевик клапана 3 (закр)",                    // 121
            "Концевик клапана 3 (откр)",                    // 122
            "Концевик клапана 4 (закр)",                    // 123
            "Концевик клапана 4 (откр)",                    // 124
            "Датчик тока двигателя",                        // 125
    };


    // названия аналоговых выходов
    private String[] ao_names = {
            "Резерв",                                       // 0
            "Клапан на теплоносителе",                      // 1
            "Клапан на холодоносителе",                     // 2
            "Приточный вентилятор",                         // 3
            "Вытяжной вентилятор",                          // 4
            "Вентиляторы",                                  // 5
            "Компрессор",                                   // 6
            "Наружная заслонка",                            // 7
            "Рециркуляция",                                 // 8
            "Подмес вытяжного воздуха",                     // 9
            "Клапан оттайки",                               // 10
            "Мощность котлов",                              // 11
            "Мощность ТЭН",                                 // 12
            "Роторный рекуператор",                         // 13
            "Клапан 2 на теплоносителе",                    // 14
            "Вытяжной вентилятор 2",                        // 15
            "Клапан контура ГВС",                           // 16
            "Клапан контура вентиляции",                    // 17
            "Клапан контура отопления",                     // 18
            "Рекуператор",                                  // 19
            "Клапан контура ТП1",                           // 20
            "Клапан контура ТП2",                           // 21
            "Клапан контура ТП3",                           // 22
            "Воздушный клапан 1",                           // 23
            "Воздушный клапан 2",                           // 24
            "Воздушный клапан 3",                           // 25
            "Приточный вентилятор 2",                       // 26
            "Клапан отопления 1 и 2 этаж",                  // 27
            "Клапан 1 на теплоносителе",                    // 28
            "Клапан контура отопления 1",                   // 29
            "Клапан контура отопления 2",                   // 30
            "Клапан контура отопления 3",                   // 31
            "Клапан контура обх.дорожек",                   // 32
            "Клапан контура отопления",                     // 33
            "Клапан контура подогрев.воды",                 // 34
            "Воздушный клапан 4",                           // 35
            "Насос 1",                                      // 36
            "Насос 2",                                      // 37
            "Мощность ТЭН 1",                               // 38
            "Производительность",                           // 39
    };

    // названия дискретных выходов
    private String[] do_names = {
            "Резерв",                                       // 0
            "Циркуляционный насос",                         // 1
            "Наружная заслонка",                            // 2
            "Приточный вентилятор",                         // 3
            "Вытяжной вентилятор",                          // 4
            "Компрессор",                                   // 5
            "Клапан \"Тепло/Холод\"",                       // 6
            "Компрессор 2",                                 // 7
            "Клапан \"Тепло/Холод\" 2",                     // 8
            "ТЭН",                                          // 9
            "ТЭН 1 (ШИМ)",                                  // 10
            "ТЭН 1",                                        // 11
            "ТЭН 2",                                        // 12
            "ТЭН 3",                                        // 13
            "ТЭН 4",                                        // 14
            "Сигнал \"Общая авария\"",                      // 15
            "Сигнал \"Работа\"",                            // 16
            "Сигнал \"Работа компр.\"",                     // 17
            "Сигнал \"Авария вент-ра\"",                    // 18
            "Сигнал \"Авария насоса\"",                     // 19
            "Сигнал \"Авария ХМ1\"",                        // 20
            "Сигнал \"Авария ХМ2\"",                        // 21
            "Сигнал \"Угроза замерз.\"",                    // 22
            "ККБ",                                          // 23
            "Соленоид",                                     // 24
            "Охладитель",                                   // 25
            "ТЭН оттайки рекуператора",                     // 26
            "Сигнал \"Работа насоса\"",                     // 27
            "Котел 1",                                      // 28
            "Котел 2",                                      // 29
            "Котел 3",                                      // 30
            "Котел",                                        // 31
            "Прогрев заслонки",                             // 32
            "Вытяжной вентилятор 2",                        // 33
            "Вытяжная заслонка 2",                          // 34
            "Сигнал \"Грязный фильтр\"",                    // 35
            "Насос орошения",                               // 36
            "Увлажнитель",                                  // 37
            "Резервный приточный вент-р",                   // 38
            "Резервный вытяжной вент-р",                    // 39
            "Рекуператор",                                  // 40
            "Насос 1",                                      // 41
            "Насос 2",                                      // 42
            "Клапан (открытие)",                            // 43
            "Клапан (закрытие)",                            // 44
            "Насос 1 контура ГВС",                          // 45
            "Насос 2 контура ГВС",                          // 46
            "Насос 1 контура вентиляции",                   // 47
            "Насос 2 контура вентиляции",                   // 48
            "Насос 1 контура отопления",                    // 49
            "Насос 2 контура отопления",                    // 50
            "Байпас",                                       // 51
            "Наружная заслонка (откр.)",                    // 52
            "Наружная заслонка (закр.)",                    // 53
            "Клапан 2 (открытие)",                          // 54
            "Клапан 2 (закрытие)",                          // 55
            "Клапан ККБ \"Холод\"",                         // 56
            "Клапан ККБ \"Нагрев\"",                        // 57
            "Фанкойл",                                      // 58
            "Фанкойл 1",                                    // 59
            "Фанкойл 2",                                    // 60
            "Фанкойл 3",                                    // 61
            "Фанкойл 4",                                    // 62
            "Сигнал \"Авария клапанов\"",                   // 63
            "Скорость 1",                                   // 64
            "Скорость 2",                                   // 65
            "Скорость 3",                                   // 66
            "Насос контура ТП1",                            // 67
            "Насос контура ТП2",                            // 68
            "Насос контура ТП3",                            // 69
            "Воздушный клапан 1 (откр.)",                   // 70
            "Воздушный клапан 1 (закр.)",                   // 71
            "Воздушный клапан 2 (откр.)",                   // 72
            "Воздушный клапан 2 (закр.)",                   // 73
            "Воздушный клапан 3 (откр.)",                   // 74
            "Воздушный клапан 3 (закр.)",                   // 75
            "Сетевой насос",                                // 76
            "Сигнал \"Авар.осн.прит.вент.\"",               // 77
            "Сигнал \"Авар.рез.прит.вент.\"",               // 78
            "Сигнал \"Авар.осн.выт.вент.\"",                // 79
            "Сигнал \"Авар.рез.выт.вент.\"",                // 80
            "Насос отопл. 1 и 2 эт.",                       // 81
            "Мешалка",                                      // 82
            "Элеватор",                                     // 83
            "Вентилятор завесы 1",                          // 84
            "Вентилятор завесы 2",                          // 85
            "Вентилятор завесы 3",                          // 86
            "Вентилятор завесы 4",                          // 87
            "Вытяжной вентилятор В4",                       // 88
            "Вытяжной вентилятор В5",                       // 89
            "Вытяжной вентилятор В6",                       // 90
            "Вытяжной вентилятор В7",                       // 91
            "Вытяжной вентилятор В8",                       // 92
            "Вытяжной вентилятор В9",                       // 93
            "Мешалка вперед",                               // 94
            "Мешалка назад",                                // 95
            "Приточная заслонка",                           // 96
            "Вытяжная заслонка",                            // 97
            "Насос 1 Отопление 1",                          // 98
            "Насос 2 Отопление 1",                          // 99
            "Насос 1 Отопление 2",                          // 100
            "Насос 2 Отопление 2",                          // 101
            "Насос 1 Отопление 3",                          // 102
            "Насос 2 Отопление 3",                          // 103
            "Сигнал \"Работа двигателя 1\"",                // 104
            "Сигнал \"Работа двигателя 2\"",                // 105
            "Сигнал \"Работа двигателя 3\"",                // 106
            "Сигнал \"Работа двигателя 4\"",                // 107
            "Сигнал \"Грязный фильтр пр.\"",                // 108
            "Сигнал \"Грязный фильтр выт.\"",               // 109
            "Сигнал \"Авария прит.вент-ра\"",               // 110
            "Сигнал \"Авария выт.вент-ра\"",                // 111
            "Компрессор 1",                                 // 112
            "Компрессор 3",                                 // 113
            "Сигнал \"Высокое давление\"",                  // 114
            "Сигнал \"Низкое давление\"",                   // 115
            "Сигнал \"Авария компрессора\"",                // 116
            "Сигнал \"Оттайка\"",                           // 117
            "Сигнал \"Авария ТЭН\"",                        // 118
            "Вытяжной вентилятор В3",                       // 119
            "Сигнал \"Пуск\"",                              // 120
            "Вытяжной вентилятор В10",                      // 121
            "Насос контура обх.дорожек",                    // 122
            "Насос контура отопления",                      // 123
            "Насос контура подогрев.воды",                  // 124
            "Сигнал \"Авария насоса 1\"",                   // 125
            "Сигнал \"Авария насоса 2\"",                   // 126
            "Сигнал \"Авария насоса 3\"",                   // 127
            "Подогрев картера",                             // 128
            "Сигнал \"Пуск рез.уст.\"",                     // 129
            "ОЗК",                                          // 130
            "ТЭН 5",                                        // 131
            "ТЭН 6",                                        // 132
            "Насос 1 подпитки",                             // 133
            "Насос 2 подпитки",                             // 134
            "Подпитка",                                     // 135
            "Клапан 1 (закрытие)",                          // 136
            "Клапан 1 (открытие)",                          // 137
            "Клапан 2 (закрытие)",                          // 138
            "Клапан 2 (закрытие)",                          // 139
            "Клапан 3 (закрытие)",                          // 140
            "Клапан 3 (открытие)",                          // 141
            "Клапан 4 (закрытие)",                          // 142
            "Клапан 4 (закрытие)",                          // 143
            "ШНЭК вперед",                                  // 144
            "ШНЭК назад",                                   // 145
    };

    // названия аварий
    private String[] sAlarmNames = {
            "Резерв",                                                       // 0
            "Авария датчика на U1",                                         // 1
            "Авария датчика на U2",                                         // 2
            "Авария датчика на U3",                                         // 3
            "Авария датчика на U4",                                         // 4
            "Авария датчика на U5",                                         // 5
            "Авария датчика на U6",                                         // 6
            "Авария датчика на U7",                                         // 7
            "Авария датчика на U8",                                         // 8
            "Авария приточного вентилятора",                                // 9
            "Авария вытяжного вентилятора",                                 // 10
            "Авария вентилятора КБ",                                        // 11
            "Авария компрессора",                                           // 12
            "Авария по высокому давлению",                                  // 13
            "Авария по низкому давлению",                                   // 14
            "Высокая t фреона",                                             // 15
            "Низкая t фреона",                                              // 16
            "Авария по перегреву фреона",                                   // 17
            "Авария по " + String.valueOf((char) 916) + "t фреона (T3-T4)", // 18
            "Авария циркуляционного насоса",                                // 19
            "Калорифер не прогревается",                                    // 20
            "Грязный фильтр на притоке",                                    // 21
            "Грязный фильтр на вытяжке",                                    // 22
            "Грязные фильтры",                                              // 23
            "Угроза замерзания по воздуху",                                 // 24
            "Угроза замерзания по ОВ",                                      // 25
            "Перегрев ТЭН (термоконтакт)",                                  // 26
            "Перегрев ТЭН (датчик)",                                        // 27
            "Перегрев ТЭН оттайки (термоконтакт)",                          // 28
            "Перегрев ТЭН оттайки (датчик)",                                // 29
            "Пожар",                                                        // 30
            "Авария по питанию",                                            // 31
            "Авария ХМ1",                                                   // 32
            "Авария ХМ2",                                                   // 33
            "Авария ККБ",                                                   // 34
            "Нет протока",                                                  // 35
            "Авария компрессора 1",                                         // 36
            "Авария компрессора 2",                                         // 37
            "Авария вентилятора КБ 1",                                      // 38
            "Авария вентилятора КБ 2",                                      // 39
            "Авария по высокому давлению 1",                                // 40
            "Авария по низкому давлению 1",                                 // 41
            "Авария по высокому давлению 2",                                // 42
            "Авария по низкому давлению 2",                                 // 43
            "Авария компрессоров",                                          // 44
            "Угроза обмерзания рекуператора",                               // 45
            "Авария вентилятора В2",                                        // 46
            "Авария вентилятора В3",                                        // 47
            "Низкая t воды подачи",                                         // 48
            "Авария по высокому давлению (контур 2)",                       // 49
            "Авария по низкому давлению (контур 2)",                        // 50
            "Высокая t фреона (контур 2)",                                  // 51
            "Низкая t фреона (контур 2)",                                   // 52
            "Авария по перегреву фреона (контур 2)",                        // 53
            "Авария по " + String.valueOf((char) 916) + "t фреона (T3-T4) (контур 2)", // 54
            "Высокая t воздуха",                                            // 55
            "Авария ККБ 1",                                                 // 56
            "Авария ККБ 2",                                                 // 57
            "Авария вентиляторов",                                          // 58
            "Авария резервного вентилятора",                                // 59
            "Высокая t компрессора",                                        // 60
            "Низкая t воздуха в помещении",                                 // 61
            "Авария насоса контура ТП1",                                    // 62
            "Авария насоса контура ТП2",                                    // 63
            "Авария насоса контура ТП3",                                    // 64
            "Авария двигателя 1",                                           // 65
            "Авария двигателя 2",                                           // 66
            "Авария двигателя 3",                                           // 67
            "Авария насоса контура ГВС",                                    // 68
            "Авария насоса контура вентиляции",                             // 69
            "Авария насоса контура отопления",                              // 70
            "Авария приточного вентилятора 2",                              // 71
            "Авария вытяжного вентилятора 2",                               // 72
            "Авария насоса контура отопления 1 и 2 этаж",                   // 73
            "Угроза замораживания",                                         // 74
            "Авария рекуператора",                                          // 75
            "Авария двигателя 4",                                           // 76
            "Авария вытяжного вентилятора В4",                              // 77
            "Авария вытяжного вентилятора В5",                              // 78
            "Авария вытяжного вентилятора В6",                              // 79
            "Авария вытяжного вентилятора В7",                              // 80
            "Авария вытяжного вентилятора В8",                              // 81
            "Авария вытяжного вентилятора В9",                              // 82
            "Авария циркуляционного насоса отопления 1",                    // 83
            "Авария циркуляционного насоса отопления 2",                    // 84
            "Авария циркуляционного насоса отопления 3",                    // 85
            "Авария циркуляционного насоса 1",                              // 86
            "Авария циркуляционного насоса 2",                              // 87
            "Угроза замерзания по ОВ 1",                                    // 88
            "Угроза замерзания по ОВ 2",                                    // 89
            "Калорифер 1 не прогревается",                                  // 90
            "Калорифер 2 не прогревается",                                  // 91
            "Авария компрессора 3",                                         // 92
            "Авария вытяжного вентилятора В10",                             // 93
            "Авария насоса обходных дрожек",                                // 94
            "Авария насоса подогрева воды",                                 // 95
            "Авария протечки",                                              // 96
            "Обрыв ремня прит.вент-ра",                                     // 97
            "Обрыв ремня выт.вент-ра",                                      // 98
            "Грязный HEPA фильтр",                                          // 99
            "Грязный фильтр 1",                                             // 100
            "Грязный фильтр 2",                                             // 101
            "Грязный фильтр 3",                                             // 102
            "Грязный фильтр 4",                                             // 103
            "Авария сетевого насоса",                                       // 104
            "Авария ЧП ПВ",                                                 // 105
    };

    static int timeout = 3000;//3000;
    static int delay = 50;
    static int period = 4000;//4000;



    static private int[] nRam = new int[32];
    static private int[] nInputRegistersData = new int[64];
    static private boolean[] bDiscretInputsData = new boolean[80];

    static private int[] nRamOld = new int[32];
    static private int[] nInputRegistersDataOld = new int[64];
    static private boolean[] bDiscretInputsDataOld = new boolean[80];

    static private String[][] sPhoneBook = new String[10][2];
    static private int[] nAlarmNamesId = new int[64];

    static private boolean[] bAlarmFlags = new boolean[32];

    private ListView lvParameter;

    private MainScreenParameterListAdaptor adapter;
    private List<MainScreenParameter> mParameterList;

    static private int nRemoteStartBlockFlag;
    static private int nSecurityLevel;
    static private int badLinkCounter;
    static private int tempBadLinkCounter;

    static private int appMode;
    static private String sLocalIP;
    static private String sGlobalIP;

    static private int device_address;
    static private int device_algorithm;
    static private String device_name;
    static private String device_ip;
    static private String port_number;
    static private String device_id;
    static private String password1;
    static private String password2;
    static private String password3;

    private OnRequestBack<short[]> onRequestBackReadInputRegisters;
    private OnRequestBack<boolean[]> onRequestBackReadDiscreteInputs;
    private OnRequestBack<short[]> onRequestBackReadHoldingRegisters;
    private OnRequestBack<String> onRequestBackWriteRegister;

    private OnRequestBack<String> onRequestBackModbusInit;

    static private boolean bChange;
    static private boolean netInitSuccessFlag;
    static private boolean paramReadSuccessFlag;
    static private boolean paramReadSuccessFlag2;
    static private boolean paramReadSuccessFlag3;

    private boolean dialogOnFlag;

    //static private boolean bSwitchStateChanged;

    static private boolean largeScreen;

    private SharedPreferences sPref;

    private Timer myTimer1;
    private ProgressBar wait_bar;

    private WifiManager wifiManager;

    public NewMainActivity() {
        onRequestBackReadDiscreteInputs = null;
        onRequestBackReadHoldingRegisters = null;
        onRequestBackReadInputRegisters = null;
        onRequestBackModbusInit = null;
        onRequestBackWriteRegister = null;

        netInitSuccessFlag = false;
        paramReadSuccessFlag = false;
        paramReadSuccessFlag2 = false;
        paramReadSuccessFlag3 = false;

        //bSwitchStateChanged = false;

        dialogOnFlag = false;

        nSecurityLevel = 0;//3;//0;
        largeScreen = false;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_new_main);

        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);

        // Get WifiManager
        wifiManager = (WifiManager) getApplicationContext().getSystemService(WIFI_SERVICE);

        Intent intent = getIntent();
        appMode = intent.getIntExtra("app_mode", 1);
        device_algorithm = intent.getIntExtra("device_algorithm", 101);
        device_name = intent.getStringExtra("system_name");
        device_ip = intent.getStringExtra("device_ip");
        device_address = intent.getIntExtra("device_address", 2);
        port_number = intent.getStringExtra("port_number");

        device_id = intent.getStringExtra("serial_number");
        if (device_algorithm != 986) {
            if (appMode == 2 || (Integer.parseInt(device_id) >= 1200 && Integer.parseInt(device_id) < 5000)) {
                timeout = 500;
                period = 1000;
                netInitSuccessFlag = true;
            }
        }

        password1 = intent.getStringExtra("password1");
        password2 = intent.getStringExtra("password2");
        password3 = intent.getStringExtra("password3");


        sPref = getSharedPreferences("MyPref", MODE_PRIVATE);
        sPhoneBook[0][0] = sPref.getString("CONTACT_NAME_1", "");
        sPhoneBook[0][1] = sPref.getString("CONTACT_NUMBER_1", "");
        sPhoneBook[1][0] = sPref.getString("CONTACT_NAME_2", "");
        sPhoneBook[1][1] = sPref.getString("CONTACT_NUMBER_2", "");
        sPhoneBook[2][0] = sPref.getString("CONTACT_NAME_3", "");
        sPhoneBook[2][1] = sPref.getString("CONTACT_NUMBER_3", "");
        sPhoneBook[3][0] = sPref.getString("CONTACT_NAME_4", "");
        sPhoneBook[3][1] = sPref.getString("CONTACT_NUMBER_4", "");
        sPhoneBook[4][0] = sPref.getString("CONTACT_NAME_5", "");
        sPhoneBook[4][1] = sPref.getString("CONTACT_NUMBER_5", "");
        sPhoneBook[5][0] = sPref.getString("CONTACT_NAME_6", "");
        sPhoneBook[5][1] = sPref.getString("CONTACT_NUMBER_6", "");
        sPhoneBook[6][0] = sPref.getString("CONTACT_NAME_7", "");
        sPhoneBook[6][1] = sPref.getString("CONTACT_NUMBER_7", "");
        sPhoneBook[7][0] = sPref.getString("CONTACT_NAME_8", "");
        sPhoneBook[7][1] = sPref.getString("CONTACT_NUMBER_8", "");
        sPhoneBook[8][0] = sPref.getString("CONTACT_NAME_9", "");
        sPhoneBook[8][1] = sPref.getString("CONTACT_NUMBER_9", "");
        sPhoneBook[9][0] = sPref.getString("CONTACT_NAME_10", "");
        sPhoneBook[9][1] = sPref.getString("CONTACT_NUMBER_10", "");


        // arrays init
        for (int i = 0; i < 32; i++) {
            nRam[i] = 0;
            nRamOld[i] = 0;
        }

        for (int i = 0; i < 64; i++) {
            nInputRegistersData[i] = 0;
            nInputRegistersDataOld[i] = 0;
        }

        for (int i = 0; i < 80; i++) {
            bDiscretInputsData[i] = false;
            bDiscretInputsDataOld[i] = false;
        }


        // Screen size in pixels
        DisplayMetrics dm = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(dm);
        int screenWidth = dm.widthPixels;
        int screenHeight = dm.heightPixels;
        int dens = dm.densityDpi;
        double wi=(double)screenWidth/(double)dens;
        double hi=(double)screenHeight/(double)dens;
        double x = Math.pow(wi,2);
        double y = Math.pow(hi,2);
        double screenInches = Math.sqrt(x+y);

        if (screenInches >= 6.8)
            largeScreen = true;

        wait_bar = (ProgressBar) findViewById(R.id.progressBarWaitMain);
        wait_bar.setVisibility(View.VISIBLE);




        /*ConstraintLayout constraintLayout = findViewById(R.id.newMainLayout);
        AnimationDrawable animationDrawable = (AnimationDrawable)constraintLayout.getBackground();
        animationDrawable.setEnterFadeDuration(10);
        animationDrawable.setExitFadeDuration(5000);
        animationDrawable.start();*/


        lvParameter = (ListView) findViewById(R.id.listNewMain);
        mParameterList = new ArrayList<>();


        // add data for list

        mParameterList.add(new MainScreenParameter("", "Идет загрузка данных...", "", "", 1, "", "", false));
        //mParameterList.add(new MainScreenParameter("", "Улица", "-19", 1, "", "", false));
        //mParameterList.add(new MainScreenParameter("", "t приточного воздуха", "24", 0, "", "", false));
        //mParameterList.add(new MainScreenParameter("", "t обратной воды", "15", 0, "", "", false));
        //mParameterList.add(new MainScreenParameter("", "t вытяжного воздуха", "-19", 0, "", "", false));
        //mParameterList.add(new MainScreenParameter("", "", "24", 0, "", "", false));
        //mParameterList.add(new MainScreenParameter("", "", "15", 0, "", "", false));
        //mParameterList.add(new MainScreenParameter("", "", "-19", 0, "", "", false));
        //mParameterList.add(new MainScreenParameter("", "", "24", 0, "", "", false));
        adapter = new MainScreenParameterListAdaptor(getApplicationContext(), R.layout.main_screen_item_list1, mParameterList);
        lvParameter.setAdapter(adapter);


        // Modbus init
        onRequestBackModbusInit = new OnRequestBack<String>() {
            @Override
            public void onSuccess(String s) {
                netInitSuccessFlag = true;
                badLinkCounter = 0;
            }

            @Override
            public void onFailed(String msg) {
                netInitSuccessFlag = false;
                if (badLinkCounter < 10)
                    badLinkCounter++;
            }
        };

        // ReadInputRegisters
        onRequestBackReadInputRegisters = new OnRequestBack<short[]>() {
            @Override
            public void onSuccess(short[] data) {
                for (int i = 0; i < nInputRegistersData.length; i++)
                    nInputRegistersData[i] = data[i];

                if (!paramReadSuccessFlag2) {
                    for (int i = 0; i < nInputRegistersData.length; i++)
                        nAlarmNamesId[i] = nInputRegistersData[i];

                    paramReadSuccessFlag2 = true;
                } else {
                    paramReadSuccessFlag = true;
                }

                badLinkCounter = 0;
            }

            @Override
            public void onFailed(String msg) {
                netInitSuccessFlag = false;
                if (badLinkCounter < 10)
                    badLinkCounter++;
            }
        };

        // ReadDiscreteInputs
        onRequestBackReadDiscreteInputs = new OnRequestBack<boolean[]>() {
            @Override
            public void onSuccess(boolean[] booleans) {
                for (int i = 0; i < bDiscretInputsData.length; i++)
                    bDiscretInputsData[i] = booleans[i];

                badLinkCounter = 0;
            }

            @Override
            public void onFailed(String s) {
                netInitSuccessFlag = false;
                if (badLinkCounter < 10)
                    badLinkCounter++;
            }
        };

        // ReadHoldingRegisters
        onRequestBackReadHoldingRegisters = new OnRequestBack<short[]>() {
            @Override
            public void onSuccess(short[] data) {
                for (int i = 0; i < nRam.length; i++)
                    nRam[i] = data[i];

                badLinkCounter = 0;
            }

            @Override
            public void onFailed(String s) {
                netInitSuccessFlag = false;
                if (badLinkCounter < 10)
                    badLinkCounter++;
            }
        };

        // WriteRegister
        onRequestBackWriteRegister = new OnRequestBack<String>() {
            @Override
            public void onSuccess(String s) {
                adapter.switchControlFlag = 0;
            }

            @Override
            public void onFailed(String s) {
            }
        };

        if (myTimer1 != null) {
            myTimer1.cancel();
            myTimer1 = null;
        }

        myTimer1 = new Timer();
        myTimer1.schedule(new TimerTask() {
            @Override
            public void run() {
                TimerMethod();
            }

        }, delay, period);
    }

    public void openLoginDialog() {
        dialogOnFlag = true;
        LoginDialog loginDialog = new LoginDialog();
        loginDialog.show(getSupportFragmentManager(), "login");
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.main_activity_menu, menu);
        return true;
    }

    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {


        return super.onPrepareOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.item1:
                //Intent intent = new Intent(this, MenuActivity.class);
                if (nSecurityLevel == 0) {
                    Toast.makeText(this, "Нет доступа", Toast.LENGTH_SHORT).show();
                    return true;
                }

                Intent intent = new Intent(this, NewMainMenu.class);
                intent.putExtra("app_mode", appMode);
                intent.putExtra("security_level", nSecurityLevel);
                intent.putExtra("device_address", device_address);
                intent.putExtra("device_ip", device_ip);
                intent.putExtra("device_address", device_address);
                intent.putExtra("port_number", port_number);
                intent.putExtra("device_algorithm", device_algorithm);
                intent.putExtra("speed", nRam[13]);
                intent.putExtra("serial_number", device_id);
                startActivity(intent);
                return true;
            case R.id.item2:
                openLoginDialog();
                return true;
            /*case R.id.item2:
                Intent intent3 = new Intent(this, NewParamChangeActivity.class);
                startActivity(intent3);
                return true;
            case R.id.item3:
                Intent intent4 = new Intent(this, NewParamChangeActivity.class);
                startActivity(intent4);
                return true;*/
        }
        return super.onOptionsItemSelected(item);
    }

    private void checkAndSendAlarmSMS() {
        String name;
        String message;

        sPref = getSharedPreferences("MyPref", MODE_PRIVATE);
        if (!sPref.getBoolean("ALARM_SMS_FLAG", false)) {
            return;
        }

        SmsManager smsManager = SmsManager.getDefault();

        for (int i = 0; i < 32; i++) {
            if (bAlarmFlags[i] != bDiscretInputsData[i + 48]) {

                bAlarmFlags[i] = bDiscretInputsData[i + 48];
                name = device_name.trim();

                if (bAlarmFlags[i]) {
                    message = name + ":" + sAlarmNames[nAlarmNamesId[i]];
                } else {
                    message = name + " сброс:" + sAlarmNames[nAlarmNamesId[i]];
                }

                //for (int n = 0; n < sPhoneBook.length; n++) {
                //    if (!sPhoneBook[n][1].isEmpty()) {
                        smsManager.sendTextMessage("+79671913447", null, message, null, null);
                        smsManager.sendTextMessage("+79261136082", null, message, null, null);
                        smsManager.sendTextMessage("+79261136093", null, message, null, null);
                        smsManager.sendTextMessage("+79268516595", null, message, null, null);
                        smsManager.sendTextMessage("+79163415161", null, message, null, null);
                        smsManager.sendTextMessage("+79104015311", null, message, null, null);
                        smsManager.sendTextMessage("+79265190047", null, message, null, null);

                    //}
                //}
            }
        }



    }

    @Override
    protected void onStop() {
        super.onStop();

        if (myTimer1 != null) {
            myTimer1.cancel();
            myTimer1 = null;
        }
    }

    @Override
    protected void onResume() {
        super.onResume();

        if (myTimer1 != null) {

            myTimer1.cancel();
            myTimer1 = null;

        } else {

            /*sPref = getSharedPreferences("MyPref", MODE_PRIVATE);
            String sSSID = sPref.getString("SSID","");
            WifiInfo wifi_inf = wifiManager.getConnectionInfo();
            if (wifi_inf.getSSID() != sSSID) {
                List<WifiConfiguration> list = wifiManager.getConfiguredNetworks();
                for (WifiConfiguration i : list) {
                    if (i.SSID != null && i.SSID.equals("\"" + sSSID + "\"")) {

                        wifiManager.disableNetwork(wifi_inf.getNetworkId());

                        boolean isEnabled = wifiManager.enableNetwork(i.networkId, true);

                        break;
                    }
                }
            }*/
        }

        myTimer1 = new Timer();
        myTimer1.schedule(new TimerTask() {
            @Override
            public void run() {
                TimerMethod();
            }

        }, delay, period);
    }

    private void TimerMethod()
    {
        //This method is called directly by the timer
        //and runs in the same thread as the timer.

        //We call the method that will work with the UI
        //through the runOnUiThread method.
        this.runOnUiThread(Timer_Tick);
    }


    private Runnable Timer_Tick = new Runnable() {
        public void run() {

            //This method runs in the same thread as the UI.

            //Do something to the UI thread here
            String system_state;
            String units;
            boolean bAlarmFlag = false;
            boolean bHeader = false;

            if (!paramReadSuccessFlag || !paramReadSuccessFlag2 || !paramReadSuccessFlag3) {
                wait_bar.setVisibility(View.VISIBLE);
            }


            if (!netInitSuccessFlag) {

                ModbusReq.getInstance().destory();

                if (appMode == 1 || appMode == 2) {
                    ModbusReq.getInstance().setParam(new ModbusParam()
                            .setHost("10.10.100.254")
                            .setPort(Integer.parseInt(port_number))
                            .setEncapsulated(false)
                            .setKeepAlive(true)
                            .setTimeout(timeout)
                            .setRetries(0))
                            .init(onRequestBackModbusInit);
                }

                if (appMode == 3) {
                    ModbusReq.getInstance().setParam(new ModbusParam()
                            .setHost(device_ip)
                            .setPort(Integer.parseInt(port_number))
                            .setEncapsulated(false)
                            .setKeepAlive(true)
                            .setTimeout(timeout)
                            .setRetries(0))
                            .init(onRequestBackModbusInit);
                }

                wait_bar.setVisibility(View.VISIBLE);

                return;
            }

            if (netInitSuccessFlag && paramReadSuccessFlag && adapter.switchControlFlag != 0) {
                if (adapter.switchControlFlag == 1) {
                    ModbusReq.getInstance().writeRegister(onRequestBackWriteRegister,
                            device_address, 3077, 1);

                    nRam[5] = 1;
                } else {
                    ModbusReq.getInstance().writeRegister(onRequestBackWriteRegister,
                            device_address, 3077, 0);

                    nRam[5] = 0;
                }
                return;
            }

            if (netInitSuccessFlag && !paramReadSuccessFlag2) {
                ModbusReq.getInstance().readInputRegisters(onRequestBackReadInputRegisters,
                        device_address, 416, nInputRegistersData.length);
            }

            if (!paramReadSuccessFlag2) return;

            if (netInitSuccessFlag) {
                ModbusReq.getInstance().readInputRegisters(onRequestBackReadInputRegisters,
                        device_address, 256, nInputRegistersData.length);

                ModbusReq.getInstance().readDiscreteInput(onRequestBackReadDiscreteInputs,
                        device_address, 256, bDiscretInputsData.length);

                ModbusReq.getInstance().readHoldingRegisters(onRequestBackReadHoldingRegisters,
                        device_address, 3072, nRam.length);
            }

            if (!paramReadSuccessFlag) return;

            // data validation check
            for (int i = 0; i < 8; i++) {
                if (nInputRegistersData[i + 16] >= ui_main_names.length) {
                    return;
                }
            }

            for (int i = 0; i < 30; i++) {
                if (nAlarmNamesId[i] >= sAlarmNames.length) {
                    return;
                }
            }

            for (int i = 0; i < 10; i++) {
                if (nInputRegistersData[i + 32] >= do_names.length) {
                    return;
                }
            }

            for (int i = 0; i < 4; i++) {
                if (nInputRegistersData[i + 12] >= ao_names.length) {
                    return;
                }
            }

            paramReadSuccessFlag3 = true;


            wait_bar.setVisibility(View.INVISIBLE);


            bChange = false;
            for (int i = 0; i < 14; i++) {
                if (nRam[i] != nRamOld[i]) {
                    nRamOld[i] = nRam[i];
                    bChange = true;
                }
            }

            for (int i = 0; i < 12; i++) {
                if (nInputRegistersData[i] != nInputRegistersDataOld[i]) {
                    nInputRegistersDataOld[i] = nInputRegistersData[i];
                    bChange = true;
                }
            }

            for (int i = 0; i < 24; i++) {
                if (bDiscretInputsData[i] != bDiscretInputsDataOld[i]) {
                    bDiscretInputsDataOld[i] = bDiscretInputsData[i];
                    bChange = true;
                }
            }

            if (!bChange) return;

            mParameterList.clear();

            for (int i = 0; i < 8; i++) {
                if (nInputRegistersData[i + 16] != 0) {

                    if ((nInputRegistersData[i + 16] >= 24 && nInputRegistersData[i + 16] <= 27) || nInputRegistersData[i + 16] == 50
                            || nInputRegistersData[i + 16] == 52 || nInputRegistersData[i + 16] == 54 || nInputRegistersData[i + 16] == 56
                            || nInputRegistersData[i + 16] == 114) units = "%";
                    else if (nInputRegistersData[i + 16] >= 74 && nInputRegistersData[i + 16] <= 75) units = "бар";
                    else if (nInputRegistersData[i + 16] == 115) units = "Па";
                    else units = String.valueOf((char) 176);

                    if (!bHeader) {
                        system_state = " ";

                        if (device_algorithm != 888) {
                            if (nRam[2] == 0) system_state = "Откл";
                            if (nRam[2] == 1) system_state = "Вкл";
                        } else {
                            if (nRam[2] == 0) system_state = "Ночь";
                            if (nRam[2] == 1) system_state = "День";
                        }

                        if (nRam[0] == 0) system_state += "/Зима";
                        else system_state += "/Лето";

                        if (nRam[2] == 1 && nRam[9] == 1) system_state += "/Прогрев";
                        if (nRam[7] == 1 || nRam[8] == 1) system_state += "/Оттайка";

                        for (int j = 0; j < 10; j++) {
                            if (nInputRegistersData[j + 32] == 15) {
                                if (bDiscretInputsData[j+8]) {
                                    system_state += "/Авария";
                                    bAlarmFlag = true;
                                }
                                break;
                            }
                        }

                        mParameterList.add(new MainScreenParameter(device_name.trim(), ui_main_names[nInputRegistersData[i + 16]], Integer.toString(nInputRegistersData[i]),
                                units, 1, system_state, "", false));

                        bHeader = true;

                    } else {

                        if (ui_names[nInputRegistersData[i + 16]].contains("t") || ui_names[nInputRegistersData[i + 16]].contains("Влажность")
                                || nInputRegistersData[i + 16] == 74 || nInputRegistersData[i + 16] == 75 || nInputRegistersData[i + 16] == 114 || nInputRegistersData[i + 16] == 115
                                || ui_names[nInputRegistersData[i + 16]].contains("Температура")) {

                            if (ui_names[nInputRegistersData[i + 16]].matches("t приточного воздуха")) {
                                mParameterList.add(new MainScreenParameter("", ui_names[nInputRegistersData[i + 16]], Integer.toString(nInputRegistersData[i]),
                                        units, 0, Integer.toString(nRam[23]), "", false));
                            } else {
                                mParameterList.add(new MainScreenParameter("", ui_names[nInputRegistersData[i + 16]], Integer.toString(nInputRegistersData[i]),
                                        units, 0, "", "", false));
                            }
                        }
                    }
                }
            }


            // ALARMS
            if (bAlarmFlag) {
                mParameterList.add(new MainScreenParameter("", "Текущие аварии", "",
                        "", 4, "", "", false));

                for (int i = 0; i < 32; i++) {
                    if (bDiscretInputsData[i + 48]) {
                        mParameterList.add(new MainScreenParameter("", sAlarmNames[nAlarmNamesId[i]], " ",
                                "", 0, "", "", false));
                    }
                }
            }



            //checkAndSendAlarmSMS();


            mParameterList.add(new MainScreenParameter("", "Исполнительные устр-ва", "",
                    "",4, "", "", false));


            for (int i = 0; i < 10; i++) {
                if (nInputRegistersData[i + 32] != 0) {
                    String state_str = "Откл";
                    if (bDiscretInputsData[i+8]) state_str = "Вкл";

                    mParameterList.add(new MainScreenParameter("", do_names[nInputRegistersData[i + 32]], state_str,
                            "", 0, "", "", false));
                }
            }


            mParameterList.add(new MainScreenParameter("", "", "",
                    "",4, "", "", false));


            for (int i = 0; i < 4; i++) {
                if (nInputRegistersData[i + 12] != 0) {
                    if ((nInputRegistersData[i + 12] >= 3 && nInputRegistersData[i + 12] <= 5) || nInputRegistersData[i + 12] == 15 || nInputRegistersData[i + 12] == 26) {
                        mParameterList.add(new MainScreenParameter("", ao_names[nInputRegistersData[i + 12]], Integer.toString(nInputRegistersData[i + 8]),
                                "%",3, Integer.toString(nRam[13]), "", false));
                    } else {
                        mParameterList.add(new MainScreenParameter("", ao_names[nInputRegistersData[i + 12]], Integer.toString(nInputRegistersData[i + 8]),
                                "%",5, "", "", false));
                    }
                }
            }

            for (int i = 0; i < 10; i++) {
                if (nInputRegistersData[i + 32] == 9 || nInputRegistersData[i + 32] == 10) {
                    mParameterList.add(new MainScreenParameter("", ao_names[12], Integer.toString(nRam[10]),
                            "%", 5, "", "", false));
                    break;
                }
            }



            if (nRam[5] == 1) adapter.switchControl = 1;
            else adapter.switchControl = 0;

            mParameterList.add(new MainScreenParameter("", "Блокировка работы", "",
                    "", 2, "", "", false));


            adapter.notifyDataSetChanged();
        }
    };

    @Override
    public void applyTexts(String username, String password) {
        if (username.equals(login[0]) && password.equals(login[1])) {
            nSecurityLevel = 5;
            Toast.makeText(this, "Уровень доступа 5", Toast.LENGTH_SHORT).show();
        }
        else

        if (username.equals(login[2]) && password.equals(login[3])) {
            nSecurityLevel = 4;
            Toast.makeText(this, "Уровень доступа 4", Toast.LENGTH_SHORT).show();
        }
        else

        if (username.equals(login[4]) && password.equals(login[5])) {
            nSecurityLevel = 4;
            Toast.makeText(this, "Уровень доступа 4", Toast.LENGTH_SHORT).show();
        }
        else

        if (username.equals(login[6]) && ( (password.equals(login[7]) && (Integer.parseInt(device_id) < 1081)) || password.equals(password1) )) {
            nSecurityLevel = 1;
            Toast.makeText(this, "Уровень доступа 1", Toast.LENGTH_SHORT).show();
        }
        else

        if (username.equals(login[8]) && ( (password.equals(login[9]) && (Integer.parseInt(device_id) < 1081)) || password.equals(password2) )) {
            nSecurityLevel = 2;
            Toast.makeText(this, "Уровень доступа 2", Toast.LENGTH_SHORT).show();
        }
        else

        if (username.equals(login[10]) && ( (password.equals(login[11]) && (Integer.parseInt(device_id) < 1081)) || password.equals(password3) )) {
            nSecurityLevel = 3;
            Toast.makeText(this, "Уровень доступа 3", Toast.LENGTH_SHORT).show();
        }
        else
        {
            Toast.makeText(this, "Неверный логин/пароль", Toast.LENGTH_SHORT).show();
        }

        dialogOnFlag = false;
    }
}
